@page "/code/workspaces/create"
@using Radzen
@using Radzen.Blazor
@using TFGDevopsApp1.Components.Account.Shared
@using TFGDevopsApp.Dtos.Plastic.Workspaces
@using TFGDevopsApp.Interfaces
@using TFGDevopsApp.Services
@inject IPlasticServices plasticServices
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<style>
    .rz-grid-table {
        width: unset;
    }
</style>

<AntDesign.Header Title="WorkSpaces">
    <div class="rz-grid-table mb-10"></div>
</AntDesign.Header>

<ErrorBoundary>
    <StatusMessage Message="@Message" />
    <RadzenStack Style="mb-10">
        <div class="mb-3">
            <div class="row">
                <span class="rz-button-box">
                    <a type="submit" class="btn btn-primary" href="/code/workspace/create">
                        <i class="rz-button-icon-center rzi">add</i>
                        <span class="rz-button-text ">Nuevo Workspace</span>
                    </a>
                </span>
            </div>
        </div>
    </RadzenStack>
    <RadzenDataGrid @ref="grid" AllowFiltering="true" AllowColumnResize="true"
                    FilterMode="FilterMode.Advanced" PageSize="5" AllowPaging="true" AllowSorting="true" 
                    Data="@workspaces" 
                    RowClick=@(args => OnRowClick(args))
                    TItem="WorkspaceResponseDto" ColumnWidth="300px"
                    FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterCleared=@FilterCleared
                    LogicalFilterOperator="LogicalFilterOperator.Or" FilterPopupRenderMode="PopupRenderMode.OnDemand">
        <Columns>
            <RadzenDataGridColumn TItem="WorkspaceResponseDto" Property="Name" Title="Nombre" />
            <RadzenDataGridColumn TItem="WorkspaceResponseDto" Property="MachineName" Title="Servidor" />
            <RadzenDataGridColumn TItem="WorkspaceResponseDto" Title="Acciones">
                <Template Context="workSpaces">
                    <div class="row">
                        <div class="col-4">
                            <a class="custom-button" title="Ver repositorios" href="code/repositories">
                                <i class="bi bi-code"></i> Ver repos
                            </a>
                        </div>
                        <div class="col-4">
                            <a class="custom-button" title="Borrar workspace" href="code/deleteWorkspace/@Name">
                                <i class="bi bi-code"></i> Borrar
                            </a>
                        </div>
                           @*  <RadzenButton Click=@OnRemove
                                          Icon="delete"
                                          Text="Borrar"
                                          ButtonStyle="ButtonStyle.Light"
                                          Variant="Radzen.Variant.Filled"
                                          Size="ButtonSize.Medium"
                                          Style="width:auto">
                            </RadzenButton> *@
                     </div>
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
</ErrorBoundary>

@code {

    public string Name { get; set; }
    private string Message { get; set; }
    private WorkspaceResponseDto currentWorkspace;

    RadzenDataGrid<WorkspaceResponseDto> grid;
    List<WorkspaceResponseDto> workspaces;
    IEnumerable<string> selectedTitles;
    IEnumerable<string> selectedSecondTitles;

  
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var workspace = await plasticServices.GetWorkSpacesAsync("api/v1/wkspaces");
        workspaces = workspace.Data;
    }

    public void OnRowClick(EventArgs args)
    {
        //currentWorkspace = args;
    }

    public async Task OnRemove()
    {
        var path = $"api/v1/wkspaces/{currentWorkspace.Name}";
        var response = await plasticServices.RemoveWorkSpacesAsync(path);

        if (response.Data)
        {
            Message = "Workspace removed";
        }
    }

    
    async Task OnSelectedTitlesChange(object value)
    {
        if (selectedTitles != null && !selectedTitles.Any())
        {
            selectedTitles = null;
        }

        await grid.FirstPage();
    }

    async Task OnSelectedSecondTitlesChange(object value)
    {
        if (selectedSecondTitles != null && !selectedSecondTitles.Any())
        {
            selectedSecondTitles = null;
        }

        await grid.FirstPage();
    }

    async Task FilterCleared()
    {
        selectedTitles = null;
        selectedSecondTitles = null;
        await grid.FirstPage();
    }
}