@page "/task/details/{Id}"
@using TFGDevopsApp.Components.Pages.Code
@using TFGDevopsApp.Interfaces
@using TFGDevopsApp.Core.Helpers
@using Radzen
@using Radzen.Blazor
@using TFGDevopsApp.Core.Models.Result
@inject IMantisServices mantisServices
@inject NavigationManager NavigationManager


<AntDesign.Header>
    <h4>Información de la tarea @Id</h4>
</AntDesign.Header>

<ErrorBoundary>
   @*  <RadzenDataList @ref="grid" AllowPaging="true" PageSize="5" Data="@tasks" TItem="Issue">
        <Template Context="issue">
            <div style="margin-bottom: 10px; border-bottom: 1px solid #ddd; padding: 10px;">
                <div><strong>Resumen:</strong> @issue.Summary</div>
                <div><strong>Proyecto:</strong> @issue.Project.Name</div>
                <div><strong>Categoria:</strong> @issue.Category.Name</div>
                <div><strong>Priority:</strong> @issue.Priority.Name</div>
                <div><strong>Reportado por:</strong> @issue.Reporter.Name</div>
                <div><strong>Asignado a:</strong> @issue.Handler.Name</div>
                <div><strong>Descripción:</strong> @issue.Description</div>
            </div>
        </Template>
    </RadzenDataList> *@
</ErrorBoundary>

@code {

    [Parameter]
    public string Id { get; set; }

    public List<Issue> tasks { get; set; } = new();
    RadzenDataList<Issue> grid;

    private void Volver()
    {
        NavigationManager.NavigateTo($"/task/task");
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var response = await mantisServices.GetTaskByIdAsync("issues",Convert.ToInt32(@Id));
        tasks[0] = response.Data.Issues[0];
    }
}